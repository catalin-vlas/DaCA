/*
 * DaCASparqlProcessor
 * This is DaCA's Sparql Processor service.  You can find out more about     us at [https://github.com/catalin-vlas/DaCA](DaCA).
 *
 * OpenAPI spec version: 1.0.0
 * Contact: aurelian.hreapca@info.uaic.ro
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wade.daca.sparql.client.api;

import com.wade.daca.sparql.client.ApiException;
import com.wade.daca.sparql.client.model.RdfStats;
import org.junit.Test;
import org.junit.Ignore;

import java.util.List;

/**
 * API tests for NamespaceApi
 */
@Ignore
public class NamespaceApiTest {

    private final NamespaceApi api = new NamespaceApi();

    
    /**
     * Create a new namespace
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createNamespaceTest() throws ApiException {
        String namespaceId = null;
        api.createNamespace(namespaceId);

        // TODO: test validations
    }
    
    /**
     * Delete a namespace
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteNamespaceTest() throws ApiException {
        String namespaceId = null;
        api.deleteNamespace(namespaceId);

        // TODO: test validations
    }
    
    /**
     * Get namespace stats
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getNamespaceStatsTest() throws ApiException {
        String namespaceId = null;
        RdfStats response = api.getNamespaceStats(namespaceId);

        // TODO: test validations
    }
    
    /**
     * Get namespaces
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getNamespacesTest() throws ApiException {
        List<String> response = api.getNamespaces();

        // TODO: test validations
    }
    
}

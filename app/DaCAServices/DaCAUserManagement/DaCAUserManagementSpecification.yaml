swagger: '2.0'
info:
  description: >-
    This is DaCA's User Management service.  You can find out more about us
    at [https://github.com/catalin-vlas/DaCA](DaCA).
  version: 1.0.0
  title: DaCAUserManagement
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: aurelian.hreapca@info.uaic.ro
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: 'localhost:1994'
basePath: /
tags:
  - name: User
    description: User management service
    externalDocs:
      description: Find out more
      url: 'https://github.com/catalin-vlas/DaCA'
schemes:
  - http
security:
  - basicAuth: []
paths:
  /user:
    post:
      tags:
        - User
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
        '401':
           $ref: "#/responses/UnauthorizedError"
  /user/login:
    get:
      tags:
        - User
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: formData
          description: The user name for login
          required: true
          type: string
        - name: password
          in: formData
          description: The password for login in clear text
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        '400':
          description: Invalid username/password supplied
        '401':
           $ref: "#/responses/UnauthorizedError"
  /user/logout:
    get:
      tags:
        - User
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      produces:
        - application/xml
        - application/json
      parameters: []
      responses:
        default:
          description: successful operation
        '401':
           $ref: "#/responses/UnauthorizedError"
  '/user/{username}':
    get:
      tags:
        - User
      summary: Get user by user name
      description: ''
      operationId: getUserByName
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid username supplied
        '401':
           $ref: "#/responses/UnauthorizedError"
        '404':
          description: User not found
    put:
      tags:
        - User
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: path
          description: name that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '400':
          description: Invalid user supplied
        '401':
           $ref: "#/responses/UnauthorizedError"
        '404':
          description: User not found
    delete:
      tags:
        - User
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid username supplied
        '401':
           $ref: "#/responses/UnauthorizedError"
        '404':
          description: User not found
securityDefinitions:
  basicAuth:
    type: basic
responses:
  UnauthorizedError:
    description: Authentication information is missing or invalid
    headers:
      WWW_Authenticate:
        type: string
definitions:
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      userStatus:
        type: integer
        format: int32
        description: User Status
externalDocs:
  description: Find out more about DaCA
  url: 'https://github.com/catalin-vlas/DaCA'
